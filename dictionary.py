#辞書型　　複数の要素を持つデータ型
# リストとタプル(インデックで管理ができる)。要素の変更ができるかの違い。listは変更可。タプルは不可。
# 辞書型は要素の変更可。インデックスなし

#key:value
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':'70'}
print(pokemon)
print(type(pokemon))

# {'リザードン': 100, 'カメックス': 80, 'フシギバナ': '70'}
# <class 'dict'> これは型


#dict関数　辞書を作成
pokemon = dict(リザードン=100,カメックス=80,フシギバナ=70)
print(pokemon)
print(type(pokemon))
#{'リザードン': 100, 'カメックス': 80, 'フシギバナ': 70}
#<class 'dict'>

pokemon = dict([['リザードン',100],['カメックス',80],['フシギバナ',70]])
print(pokemon)
print(type(pokemon))

# {'リザードン': 100, 'カメックス': 80, 'フシギバナ': 70}
# <class 'dict'>


pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':'70'}
print(pokemon.keys())
#dict_keys(['リザードン', 'カメックス', 'フシギバナ'])

pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':'70'}
print(pokemon.values())
#dict_values([100, 80, '70'])



#keyを指定
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':'70'}
print(pokemon['リザードン'])
# 100

#valueの書き換え
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
pokemon['フシギバナ'] = 90 
print(pokemon)
# {'リザードン': 100, 'カメックス': 80, 'フシギバナ': 90}


#辞書に要素追加
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
pokemon['ピカチュウ'] = 90 
print(pokemon)
#{'リザードン': 100, 'カメックス': 80, 'フシギバナ': 70, 'ピカチュウ': 90}


#辞書同士での辞書の更新や追加
pokemon1 = {'リザードン':100,'カメックス':80,'フシギバナ':70}
pokemon2 = {'サンダー':60,'フリーザー':90,'ファイアー':50}
pokemon1.update(pokemon2)
print(pokemon1)
#{'リザードン': 100, 'カメックス': 80, 'フシギバナ': 70, 'サンダー': 60, 'フリーザー': 90, 'ファイアー': 50}


### 辞書の削除
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
del pokemon['カメックス']
print(pokemon)
#{'リザードン': 100, 'フシギバナ': 70}

pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
del pokemon['カメックス'],pokemon['フシギバナ']
print(pokemon)
# {'リザードン': 100}


# popメソッドの削除
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
pokemon.pop('リザードン')
print(pokemon)
#{'カメックス': 80, 'フシギバナ': 70}


#clearメソッドでデータ全削除
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
pokemon.clear()
print(pokemon)
# {}


#辞書の要素を検索
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
print('リザードン' in pokemon)

#True

#変数も使える
x = 'リザードン'
pokemon = {'リザードン':100,'カメックス':80,'フシギバナ':70}
print(x in pokemon)

#True